---
const { description, title, type, keywords } = Astro.props;

const base_url = new URL(
    import.meta.env.BASE_URL,
    Astro.site ? Astro.site : Astro.url.origin
);

function anchor(path: string) {
    return new URL(path, base_url);
}

function canonical() {
    return new URL(Astro.url.pathname, base_url);
}
---

<meta charset="UTF-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />

<link rel="canonical" href={canonical()} />

<link
    rel="icon"
    href={anchor("favicon.svg").pathname}
    type="image/svg+xml"
    sizes="any"
/>
<link
    rel="icon"
    href={anchor("favicon-64.png").pathname}
    type="image/png"
    sizes="64x64"
/>
<link
    rel="icon"
    href={anchor("favicon-48.png").pathname}
    type="image/png"
    sizes="48x48"
/>
<link
    rel="icon"
    href={anchor("favicon-32.png").pathname}
    type="image/png"
    sizes="32x32"
/>
<link
    rel="icon"
    href={anchor("favicon-16.png").pathname}
    type="image/png"
    sizes="16x16"
/>

<meta property="og:title" content={title ? title : "Itinerary planner"} />
<meta property="og:image" content={anchor("og-image.png")} />
<meta property="og:type" content={type ? type : "website"} />
<meta property="og:url" content={canonical()} />
{description ? <meta property="og:description" content={description} /> : ""}
<meta property="og:locale" content="en_US" />

<title>{title ? title : "Itinerary planner"}</title>
{description ? <meta name="description" content={description} /> : ""}
{keywords ? <meta name="keywords" content={keywords} /> : ""}
